"""empty message

Revision ID: e4961def9f89
Revises: 
Create Date: 2024-02-28 11:45:57.722968

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e4961def9f89'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=25), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('quiz',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subject', sa.String(length=25), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('quiz', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quiz_creator_id'), ['creator_id'], unique=False)

    op.create_table('question',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.String(length=100), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('question', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_question_quiz_id'), ['quiz_id'], unique=False)

    op.create_table('quiz_attempt',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('quiz_attempt', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quiz_attempt_quiz_id'), ['quiz_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_quiz_attempt_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_quiz_attempt_user_id'), ['user_id'], unique=False)

    op.create_table('attempt_question',
    sa.Column('attempt_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attempt_id'], ['quiz_attempt.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('attempt_id', 'question_id')
    )
    with op.batch_alter_table('attempt_question', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_attempt_question_attempt_id'), ['attempt_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_attempt_question_question_id'), ['question_id'], unique=False)

    op.create_table('choice',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.String(length=100), nullable=False),
    sa.Column('correct', sa.Boolean(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('choice', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_choice_question_id'), ['question_id'], unique=False)

    op.create_table('user_choice',
    sa.Column('choice_id', sa.Integer(), nullable=True),
    sa.Column('attempt_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attempt_id'], ['quiz_attempt.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['choice_id'], ['choice.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('choice_id', 'attempt_id')
    )
    with op.batch_alter_table('user_choice', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_choice_attempt_id'), ['attempt_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_choice_choice_id'), ['choice_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_choice', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_choice_choice_id'))
        batch_op.drop_index(batch_op.f('ix_user_choice_attempt_id'))

    op.drop_table('user_choice')
    with op.batch_alter_table('choice', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_choice_question_id'))

    op.drop_table('choice')
    with op.batch_alter_table('attempt_question', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attempt_question_question_id'))
        batch_op.drop_index(batch_op.f('ix_attempt_question_attempt_id'))

    op.drop_table('attempt_question')
    with op.batch_alter_table('quiz_attempt', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quiz_attempt_user_id'))
        batch_op.drop_index(batch_op.f('ix_quiz_attempt_timestamp'))
        batch_op.drop_index(batch_op.f('ix_quiz_attempt_quiz_id'))

    op.drop_table('quiz_attempt')
    with op.batch_alter_table('question', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_question_quiz_id'))

    op.drop_table('question')
    with op.batch_alter_table('quiz', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quiz_creator_id'))

    op.drop_table('quiz')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    # ### end Alembic commands ###
